version: '3.9'
services:
  postgres:
    image: postgres:16-alpine
    container_name: Ing_bot_postgres_dev
    env_file: ./db/.env
    environment:
      - TZ=America/Bogota
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d:ro
      - pg_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:8.10
    container_name: Ing_bot_pgadmin_dev
    env_file: ./db/.env
    environment:
      - PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION=True
      - PGADMIN_CONFIG_LOGIN_BANNER='"Bienvenido a pgAdmin"'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./db/pgadmin/servers.json:/pgadmin4/servers.json:ro
    ports:
      - '5050:80'
    depends_on: [postgres]
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: Ing_bot_redis_dev
    env_file: ./db/.env
    command: ['redis-server','--appendonly','yes','--requirepass','${REDIS_PASSWORD}']
    volumes:
      - redis_data:/data
    ports:
      - '6379:6379'
    restart: unless-stopped

  api_main:
    build: { context: ./backend/main, target: dev }
    container_name: api_main
    env_file: ./backend/main/.env
    volumes:
      - ./backend/main/app:/code
    environment:
      CHOKIDAR_USEPOLLING: "true"
    depends_on: [postgres, redis]
    ports:
      - '8000:80'
    restart: unless-stopped

  api_socket:
    build: { context: ./backend/socket, target: dev }
    container_name: api_socket
    env_file: ./backend/socket/.env
    volumes:
      - ./backend/socket/app:/code
    environment:
      CHOKIDAR_USEPOLLING: "true"
    depends_on: [postgres, redis]
    ports:
      - '8001:80'
    restart: unless-stopped

  evolution_api:
    image: atendai/evolution-api:v2.1.1
    container_name: evolution_api_dev
    env_file: ./evolution/.env
    volumes:
      - evolution_data:/evolution/store
    depends_on: [postgres, redis]
    ports:
      - '8080:8080'
    restart: unless-stopped

volumes:
  evolution_data:
  pg_data:
  pgadmin_data:
  redis_data:
